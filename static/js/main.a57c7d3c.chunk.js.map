{"version":3,"sources":["components/input-text.js","components/title.js","presets sync /^/.*$","components/input-range.js","components/footer.js","components/dropdown.js","components/navbar.js","components/imageDisplay.js","components/input-button.js","components/input-file.js","components/imageSettings.js","components/input-checkbox.js","components/separator.js","components/noiseSettings.js","noiseGeneration/render.js","noiseGeneration/mouseEvents.js","noiseGeneration/validate.js","components/color-picker.js","components/colorsSettings.js","App.js","reportWebVitals.js","index.js"],"names":["InputText","props","className","size","label","type","value","onChange","e","inputChangeHandler","name","Title","title","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports","InputRange","labelShow","onlyRange","renderTextIndicator","min","max","step","Footer","href","target","rel","icon","githubIcon","style","fontSize","codeIcon","keyboardIcon","action","method","src","border","alt","Dropdown","renderLabelIcon","list","item","onClick","onChangePreset","Navbar","caretDown","selectedPresetName","ImageDisplay","InputButton","InputFile","useState","file","setFile","accept","files","fileChangeHandler","ImageSettings","scale","download","downloadIcon","exportSettings","fileExport","importSettings","fileImport","InputCheckbox","checked","checkboxChangeHandler","width","height","viewBox","fill","xmlns","d","Separator","horizontal","require","default","NoiseSettings","canvas","ctx","image","data","showMoreOpt","setShowMoreOpt","minusIcon","plusIcon","Fragment","noiseSettings","xOffset","yOffset","zoom","renderOptions","seed","diceIcon","generateSeed","pixelsWidth","pixelsHeight","grayScale","tint","onInput","transparency","falloff","octaves","lacunarity","persistence","minValue","SimplexNoise","settings","a","noise","updateNoise","canvasWidth","canvasHeight","createImageData","colorArr","getTintArray","getColorArray","colors","noiseIndex","i","drawPixel","swapBuffer","putImageData","hexToRgb","hex","result","exec","r","parseInt","g","b","arr","colorsRGB","color","breakpoint","initialColor","currentColor","forEach","tintRGB","Array","length","index","inputUpdateCanvas","getState","initMousePosition","offsetsUpdateCanvas","currentX","currentY","simplex","noiseArr","j","evaluateCoords","x","y","amp","freq","midWidthX","midWidthY","calcX","calcY","noise2D","fx","fy","rSquare","Math","pow","Render","renderCanvas","saveImage","resizedCanvas","c","document","createElement","cctx","getContext","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","imageSmoothingEnabled","drawImage","resizeAndExportCanvas","canvasToImage","Date","toJSON","slice","quality","init","getElementById","isDown","MouseEvents","getStateN","inputUpdateCanvasN","offsetsUpdateCanvasN","sqrt","addEventListener","preventDefault","deltaY","onZoom","body","cursor","clientX","clientY","onMouseDown","xDif","yDif","onMouseMove","isNumber","n","isNaN","parseFloat","Validate","validationData","validateInt","validateFloat","ColorPicker","this","colorInput","dataKey","colorPick","breakpointRange","breakpointText","inputName","colorChangeHandler","trashAlt","removeColor","React","Component","ColorsSettings","addColor","App","changePreset","bind","checkboxUpdateCanvas","colorUpdateCanvas","downloadImage","defaultPresetInfo","presetsData","presets","filter","preset","defaultPresetData","path","state","randomSeed","random","setState","console","log","valueX","valueY","breakpointInput","isColor","strColor","s","Option","test1","test2","test","newBreakpoint","newValue","lastItem","round","push","splice","exportData","JSON","parse","stringify","isLoading","jsonData","URL","createObjectURL","Blob","setAttribute","appendChild","click","removeChild","reader","FileReader","onload","event","readAsText","forceRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a57c7d3c.chunk.js","sourcesContent":["function InputText(props) {\r\n\r\n  return (\r\n    <div className={`pt-2 ${props.size}`}>\r\n      <span className=\"text-gray-10 block\">\r\n        {props.label}\r\n      </span>\r\n      <input type={props.type || 'text'} value={props.value} onChange={ e => props.inputChangeHandler(e)} name={props.name}\r\n              className=\"appearance-none block w-full mt-1 \r\n                        bg-gray-50 h-10 rounded-lg px-3 text-gray-10 shadow-inner leading-tight\r\n                          focus:outline-none focus:ring  ring-gray-90\" />\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default InputText;\r\n","\r\nfunction Title(props) {\r\n  return (\r\n    <span className=\"text-gray-10 text-2xl font-montserrat-b\">\r\n      {props.title}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","var map = {\n\t\"./candy\": 23,\n\t\"./candy.json\": 23,\n\t\"./caveWall\": 24,\n\t\"./caveWall.json\": 24,\n\t\"./cloud\": 25,\n\t\"./cloud.json\": 25,\n\t\"./explosion\": 26,\n\t\"./explosion.json\": 26,\n\t\"./galaxy\": 27,\n\t\"./galaxy.json\": 27,\n\t\"./grass\": 28,\n\t\"./grass.json\": 28,\n\t\"./islands\": 29,\n\t\"./islands.json\": 29,\n\t\"./moss\": 30,\n\t\"./moss.json\": 30,\n\t\"./presetsData\": 4,\n\t\"./presetsData.json\": 4,\n\t\"./singleIsland\": 31,\n\t\"./singleIsland.json\": 31,\n\t\"./starrySky\": 32,\n\t\"./starrySky.json\": 32\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","function InputRange(props) {\r\n  function renderTextIndicator() {\r\n    if (!props.onlyRange) {\r\n      return(\r\n              <input type=\"text\" value={props.value}  onChange={ e => props.inputChangeHandler(e)} name={props.name}\r\n              className=\"appearance-none w-2/5 mt-1 min-w-1/5 \r\n              bg-gray-50 h-10 rounded-lg px-3 text-gray-10 shadow-inner leading-tight\r\n              focus:outline-none focus:ring  ring-gray-90\" />   \r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className={`pt-2 ${props.className || '' }`}>\r\n      <span className={`text-gray-10 block mb-0 ${props.labelShow}`}>\r\n        {props.label}\r\n      </span>\r\n      <div className=\"flex space-x-5\">\r\n        {renderTextIndicator()}\r\n        <input type=\"range\" min={props.min} max={props.max} step={props.step} \r\n              value={props.value}  onChange={ e => props.inputChangeHandler(e)} name={props.name}\r\n              className=\"appearance-none w-full m-auto \r\n             bg-gray-50 h-2 rounded-lg   shadow-inner \" />\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default InputRange;\r\n","import { InlineIcon } from '@iconify/react';\r\nimport codeIcon from '@iconify/icons-fa-solid/code';\r\nimport keyboardIcon from '@iconify/icons-fa-solid/keyboard';\r\nimport { Icon} from '@iconify/react';\r\nimport githubIcon from '@iconify/icons-fa-brands/github';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"w-full bg-gray-90 text-gray-10 h-10 fixed bottom-0 p-2 flex font-montserrat-m\">\r\n      <a href=\"https://github.com/alan-palacios/pixel-art-generator\" target=\"_blank\" rel=\"noreferrer\">\r\n        <Icon icon={githubIcon} style={{fontSize: '24px'}} className=\"absolute ml-0\" />\r\n      </a>\r\n      <div className=\"flex m-auto space-x-2\">\r\n        <InlineIcon icon={codeIcon} className=\"m-auto\" />\r\n        <span className=\"m-auto text-center\"> with a </span>\r\n        <InlineIcon icon={keyboardIcon} className=\"m-auto\" />\r\n        <span className=\"m-auto text-center\">by Alan Palacios</span>\r\n      </div>\r\n      <div className=\"right-0  mr-5 top-0 h-full absolute flex\">\r\n        <span className=\"w-full m-auto\">\r\n          Was it useful for you? buy me a coffee :{')  '}\r\n        </span>\r\n        <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_blank\" className=\"m-auto ml-5 flex\">\r\n          <input type=\"hidden\" name=\"hosted_button_id\" value=\"LR2AUA7K5AZMY\" />\r\n          <input type=\"image\" src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif\" border=\"0\" name=\"submit\" title=\"PayPal - The safer, easier way to pay online!\" alt=\"Donate with PayPal button\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { Icon} from '@iconify/react';\r\n\r\nfunction Dropdown(props) {\r\n\r\n  \r\n  return (\r\n    <div className={` ${props.className } my-auto group`}>\r\n      <button  type=\"button\" className=\"appearance-none block w-full \r\n                                 h-10 rounded-lg px-3 \r\n                                 focus:outline-none focus:ring  ring-gray-90\r\n                                 hover:bg-gray-70 transition-colors transition-duration-200 \" >\r\n\r\n          {renderLabelIcon()}\r\n      </button>\r\n      {renderList()}\r\n    </div>\r\n\r\n  );\r\nfunction renderLabelIcon(){\r\n    if (props.icon && props.label) {\r\n      return  (\r\n        <div className=\"flex content-between\">\r\n          <div className=\"w-full\">\r\n            <span className=\"m-auto mr-5 text-lg font-montserrat-b\">{props.label}</span>\r\n          </div>\r\n          <div className=\"\">\r\n            <Icon icon={props.icon} style={{fontSize: '24px'}} className=\"m-auto mr-0\" />\r\n          </div>\r\n        </div>\r\n            );\r\n    }else if (props.icon && props.label==null) {\r\n      return(<div>\r\n              <Icon icon={props.icon} style={{fontSize: '24px'}} className=\"m-auto\" />\r\n            </div>);\r\n    }else if(props.label && props.icon == null){\r\n      return(<span className=\"m-auto mr-5 text-lg font-montserrat-b\">{props.label}</span>);\r\n    }\r\n  }\r\n\r\n  function renderList() {\r\n       return (\r\n       <div className=\"absolute top-10 right-0 hidden group-hover:block  \r\n                      bg-gray-90 filter drop-shadow-lg shadow rounded-lg\">\r\n        <ul>\r\n          {props.list.map(item=>{\r\n            return (\r\n              <li  key={item.name} onClick={()=>props.onChangePreset(item.name)} \r\n                    className=\"px-5 py-2 hover:bg-gray-70 cursor-pointer select-none border-b-2 border-gray-70\" >\r\n                {item.name}\r\n              </li>)\r\n          })}\r\n        </ul>\r\n      </div>);     \r\n  }\r\n  \r\n}\r\n\r\nexport default Dropdown;\r\n","import Dropdown from \"./dropdown\";\r\nimport caretDown from '@iconify/icons-fa-solid/caret-down';\r\n\r\nfunction Navbar(props) {\r\n\r\n  return (\r\n    <div className=\"w-full bg-gray-90 text-gray-10 h-14 fixed top-0 p-2 flex z-10\">\r\n      <span className=\"m-auto ml-5 text-2xl font-tysla\">Pixel art generator</span>\r\n      <Dropdown  icon={caretDown} list={props.list} label={props.selectedPresetName} onChangePreset={props.onChangePreset}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","\r\nfunction ImageDisplay(props) {\r\n  return (\r\n        <div className=\" flex max-w-full w-full min-h-80 max-h-80 \">\r\n          <canvas id=\"image\" className=\"m-auto w-full h-full object-contain \"></canvas>\r\n        </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ImageDisplay;\r\n","import { Icon} from '@iconify/react';\r\n\r\nfunction InputButton(props) {\r\n  function renderLabelIcon(){\r\n    if (props.icon && props.label) {\r\n      return  (\r\n        <div className=\"flex content-between\">\r\n          <div className=\"w-full\">{props.label} </div>\r\n          <div className=\"\">\r\n            <Icon icon={props.icon} style={{fontSize: '24px'}} className=\"m-auto mr-0\" />\r\n          </div>\r\n        </div>\r\n            );\r\n    }else if (props.icon && props.label==null) {\r\n      return(<div>\r\n              <Icon icon={props.icon} style={{fontSize: '24px'}} className=\"m-auto\" />\r\n            </div>);\r\n    }else if(props.label && props.icon == null){\r\n      return(<span>{props.label} </span>);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={` ${props.className } my-auto mb-0`}>\r\n      <button onClick={props.onClick} type=\"button\" className=\"appearance-none block w-full mt-2 \r\n                                bg-gray-10 h-10 rounded-lg px-3 text-gray-70  leading-tight\r\n                                 focus:outline-none focus:ring  ring-gray-90\r\n                                 hover:bg-gray-30 transition-colors transition-duration-200 \" >\r\n          {renderLabelIcon()}\r\n      </button>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default InputButton;\r\n","import { Icon} from '@iconify/react';\r\nimport { useState } from 'react';\r\n\r\nfunction InputFile(props) {\r\n  const [file, setFile] = useState();\r\n\r\n  function fileChangeHandler(e){\r\n    setFile(e.target.files[0].name);\r\n    props.fileChangeHandler(e);\r\n  }\r\n\r\n  function renderLabelIcon(){\r\n    if (props.icon && props.label) {\r\n      return  (\r\n        <div className=\"flex content-between\">\r\n          <div className=\"w-1/2\">{props.label} </div>\r\n          <div className=\"w-1/2\">\r\n            <Icon icon={props.icon} style={{fontSize: '24px'}} className=\"m-auto mr-0\" />\r\n          </div>\r\n        </div>\r\n            );\r\n    }else if (props.icon && props.label==null) {\r\n      return(<div>\r\n              <Icon icon={props.icon} style={{fontSize: '24px'}} className=\"m-auto\" />\r\n            </div>);\r\n    }else if(props.label && props.icon == null){\r\n      return(<span>{props.label} </span>);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${props.size} my-auto mb-0`}>\r\n      <div className=\"flex space-x-10\">\r\n        <button className=\"appearance-none block w-full mt-2 relative \r\n                                  bg-gray-10 h-10 rounded-lg px-3 text-gray-70  leading-tight\r\n                                  focus:outline-none focus:ring  ring-gray-90\r\n                                  hover:bg-gray-30 transition-colors transition-duration-200 \" >\r\n          {renderLabelIcon()}\r\n          <input type=\"file\" accept=\".json\" onChange={(e)=>fileChangeHandler(e)} className=\"opacity-0 h-10 w-full absolute top-0 left-0\"/>\r\n        </button>\r\n        <span className=\"m-auto text-gray-10 w-full\">{file}</span>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default InputFile;\r\n","import InputButton from \"./input-button\";\r\nimport downloadIcon from '@iconify/icons-fa-solid/download';\r\nimport fileImport from '@iconify/icons-fa-solid/file-import';\r\nimport fileExport from '@iconify/icons-fa-solid/file-export';\r\nimport InputFile from \"./input-file\";\r\nimport InputText from \"./input-text\";\r\n\r\nfunction ImageSettings(props) {\r\n  return (\r\n    <div className=\"p-5 w-full flex-col space-y-5 h-1/3 flex font-montserrat-m\">\r\n          <InputText label=\"Scale\" value={props.scale} inputChangeHandler={props.inputChangeHandler} name=\"scale\"/>\r\n          <InputButton label=\"Download\" size=\"w-full\" onClick={props.download} icon={downloadIcon}/>\r\n          <InputButton  label=\"Export\" size=\"w-full\" onClick={props.exportSettings} icon={fileExport} />\r\n          <InputFile label=\"Import\" size=\"w-full\" fileChangeHandler={props.importSettings} icon={fileImport}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageSettings;\r\n","\r\nfunction InputCheckbox(props) {\r\n  return (\r\n    <div className={`pt-2 ${props.size} relative `}>\r\n      <span className=\"text-gray-10 block\">\r\n        {props.label}\r\n      </span>\r\n      <input type=\"checkbox\" className=\"opacity-0 absolute h-10 w-10 mt-2\" checked={props.value} name={props.name}  onChange={ e => props.checkboxChangeHandler(e)}/>\r\n      <div className=\"  w-10 mt-1 bg-gray-50 h-10 rounded-lg  shadow-inner flex\">\r\n        <svg className=\"fill-current hidden w-6 h-6 m-auto\" width=\"27\" height=\"22\" viewBox=\"0 0 27 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M22.3753 0.672109C22.8331 0.236249 23.4424 -0.00471291 24.0745 6.98599e-05C24.7066 0.00485263 25.3121 0.255006 25.7633 0.697745C26.2144 1.14048 26.476 1.74118 26.4927 2.37308C26.5094 3.00497 26.28 3.61865 25.8528 4.08461L12.8853 20.3021C12.6623 20.5423 12.3932 20.735 12.094 20.8688C11.7949 21.0026 11.4718 21.0747 11.1441 21.0807C10.8165 21.0868 10.4909 21.0267 10.187 20.9041C9.88309 20.7815 9.60702 20.5989 9.3753 20.3671L0.775802 11.7676C0.53632 11.5445 0.344238 11.2754 0.211014 10.9764C0.0777904 10.6774 0.00615389 10.3546 0.000379339 10.0273C-0.00539521 9.70003 0.0548106 9.37493 0.177404 9.07142C0.299997 8.76791 0.482467 8.4922 0.713928 8.26074C0.945389 8.02928 1.2211 7.84681 1.52461 7.72421C1.82812 7.60162 2.15322 7.54141 2.4805 7.54719C2.80779 7.55296 3.13055 7.6246 3.42955 7.75782C3.72855 7.89105 3.99765 8.08313 4.2208 8.32261L11.0263 15.1249L22.3136 0.743611C22.3339 0.718588 22.3556 0.694717 22.3786 0.672109H22.3753Z\" fill=\"#BCBCBC\"/>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default InputCheckbox;\r\n","\r\nfunction Separator(props) {\r\n  if (props.horizontal) {\r\n     return (\r\n      <div className=\"w-full min-h-min px-10 pt-3\">\r\n        <div className=\"bg-gray-50 h-px\">\r\n        </div>\r\n      </div>\r\n    );   \r\n  } else {\r\n    return (\r\n      <div className=\" h-full w-px py-10\">\r\n        <div className=\"bg-gray-50 h-full\">\r\n        </div>\r\n      </div>\r\n    );   \r\n  } \r\n\r\n}\r\n\r\nexport default Separator;\r\n","import InputButton from \"./input-button\";\r\nimport InputCheckbox from \"./input-checkbox\";\r\nimport diceIcon from '@iconify/icons-fa-solid/dice';\r\nimport Separator from \"./separator\";\r\nimport plusIcon from '@iconify/icons-fa-solid/plus';\r\nimport minusIcon from '@iconify/icons-fa-solid/minus';\r\nimport React, { useState } from \"react\";\r\nimport Icon from \"@iconify/react\";\r\n\r\nconst { default: InputRange } = require(\"./input-range\");\r\nconst { default: InputText } = require(\"./input-text\");\r\nconst { default: Title } = require(\"./title\");\r\n\r\nfunction NoiseSettings(props) {\r\n  const [showMoreOpt, setShowMoreOpt] = useState(false);\r\n\r\n  function renderOptions() {\r\n   if(showMoreOpt){\r\n        return(\r\n          <React.Fragment>\r\n            <div className=\"flex space-x-10\" >\r\n              <div className=\"w-1/2\">\r\n                  <InputRange label=\"X Offset\" name=\"xOffset\"  min={-1000} max={1000} step={0.0001} \r\n                    value={props.noiseSettings.xOffset} onlyRange={true}\r\n                    inputChangeHandler={props.inputChangeHandler} className=\"\" />\r\n                  <InputRange label=\"Y Offset\" name=\"yOffset\"  min={-1000} max={1000} step={0.0001} \r\n                    value={props.noiseSettings.yOffset} onlyRange={true}\r\n                    inputChangeHandler={props.inputChangeHandler} className=\"\" />\r\n              </div>\r\n              <div className=\"w-1/2\">\r\n                <InputRange label=\"Zoom\"  name=\"zoom\" min={-1} max={1000} step={1} \r\n                    value={props.noiseSettings.zoom}\r\n                    inputChangeHandler={props.inputChangeHandler}  />\r\n              </div>\r\n            </div>\r\n            <Separator horizontal={true} />\r\n          </React.Fragment>\r\n        );\r\n   } \r\n  }\r\n\r\n  const toggle = () => {\r\n    setShowMoreOpt(!showMoreOpt);\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full w-full pt-5\">\r\n      <div className=\"flex space-x-5\" >\r\n        <Title title=\"Noise Settings\" />\r\n        <div className={`my-auto`}>\r\n          <button onClick={toggle} type=\"button\" className=\"appearance-none block w-full  \r\n                                     h-10 rounded-lg px-3 text-gray-10  leading-tight\r\n                                    focus:outline-none focus:ring  ring-gray-90\r\n                                    hover:bg-gray-50 transition-colors transition-duration-200 \" >\r\n            <Icon icon={!showMoreOpt?plusIcon:minusIcon} style={{fontSize: '20px'}} className=\"m-auto\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Separator horizontal={true} />\r\n      <div className=\"pt-0 font-montserrat-m\">\r\n        {renderOptions()}\r\n\r\n        <div className=\"flex space-x-10\" >\r\n          <div className=\"w-1/2\">\r\n            <div className=\"flex space-x-10\" >\r\n              <InputText label=\"Seed\" name=\"seed\" size=\"w-full\"\r\n                      value={props.noiseSettings.seed}\r\n                      inputChangeHandler={props.inputChangeHandler}/>\r\n              <InputButton  size=\"w-1/6\" icon={diceIcon} onClick={props.generateSeed } />\r\n            </div>\r\n\r\n\r\n            <div className=\"flex space-x-10\" >\r\n              <InputText label=\"Width\" name=\"pixelsWidth\"\r\n                        value={props.noiseSettings.pixelsWidth}\r\n                        inputChangeHandler={props.inputChangeHandler}/>\r\n              <InputText label=\"Height\" name=\"pixelsHeight\" \r\n                        value={props.noiseSettings.pixelsHeight}\r\n                        inputChangeHandler={props.inputChangeHandler}/>\r\n            </div>\r\n\r\n            <div className=\"flex space-x-10\" >\r\n              <InputCheckbox label=\"GrayScale\" \r\n                        value={props.noiseSettings.grayScale} \r\n                        name=\"grayScale\"\r\n                        checkboxChangeHandler={props.checkboxChangeHandler} size=\"w-1/3\"/>\r\n              <div className={`pt-2 w-1/3 relative `}>\r\n                <span className=\"text-gray-10 block\">\r\n                  Tint\r\n                </span>\r\n                <input type=\"color\" name=\"tint\"\r\n                        value={props.noiseSettings.tint} \r\n                        onInput={ props.inputChangeHandler} \r\n                        className=\"appearance-none block w-full  mb-0 mt-1 \r\n                            bg-gray-50 h-10 rounded-lg  overflow-hidden shadow-inner \r\n                              focus:outline-none focus:ring  ring-gray-90\" />\r\n              </div> \r\n              <InputCheckbox label=\"Transparency\" \r\n                          value={props.noiseSettings.transparency} \r\n                          name=\"transparency\"\r\n                          checkboxChangeHandler={props.checkboxChangeHandler} size=\"w-1/3\"/>             \r\n            </div>\r\n            <InputRange label=\"Falloff\"  name=\"falloff\" min={0} max={10} step={0.001} \r\n                        value={props.noiseSettings.falloff}\r\n                        inputChangeHandler={props.inputChangeHandler}  />\r\n\r\n          </div>\r\n          <div className=\"w-1/2\">\r\n            <InputRange label=\"Octaves\"  name=\"octaves\" min={1} max={15} step={1} \r\n                        value={props.noiseSettings.octaves}\r\n                        inputChangeHandler={props.inputChangeHandler}  />\r\n\r\n            <InputRange label=\"Lacunarity\" name=\"lacunarity\" min={0} max={10} step={0.001} \r\n                        value={props.noiseSettings.lacunarity}\r\n                        inputChangeHandler={props.inputChangeHandler} />\r\n            <InputRange label=\"Persistence\" name=\"persistence\"  min={0.001} max={3} step={0.001} \r\n                        value={props.noiseSettings.persistence}\r\n                        inputChangeHandler={props.inputChangeHandler} />\r\n            <InputRange label=\"Min Value\" name=\"minValue\"  min={-1} max={1} step={0.001} \r\n                        value={props.noiseSettings.minValue}\r\n                        inputChangeHandler={props.inputChangeHandler} />\r\n          </div>\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoiseSettings;\r\n","import canvasToImage from \"canvas-to-image\";\r\nvar SimplexNoise = require('simplex-noise');\r\n  var canvas;\r\n  var ctx;\r\n  var image;\r\n  var data;\r\n\r\n  function init(){\r\n    canvas = document.getElementById('image');\r\n    ctx = canvas.getContext('2d');\r\n    return canvas;\r\n  }\r\n\r\n  function saveImage(scale){\r\n    var resizedCanvas =  resizeAndExportCanvas(scale);\r\n    canvasToImage(resizedCanvas, {\r\n      name: `generatedCanvas${(new Date().toJSON().slice(0,10))}`,\r\n      type: 'png',\r\n      quality: 1\r\n    });\r\n  }\r\n\r\n  function resizeAndExportCanvas(scale){\r\n    var c = document.createElement('canvas');\r\n    c.width = canvas.width*scale;\r\n    c.height = canvas.height*scale;\r\n    // resize the new canvas\r\n    const cctx = c.getContext('2d');\r\n    cctx.webkitImageSmoothingEnabled = false;\r\n    cctx.mozImageSmoothingEnabled = false;\r\n    cctx.imageSmoothingEnabled = false;\r\n    cctx.drawImage(canvas, 0,0,canvas.width, canvas.height, 0,0,c.width, c.height);\r\n    return c;\r\n  }\r\n\r\n\tasync function renderCanvas(settings){\r\n\r\n    const noise = updateNoise(settings);\r\n    //setting dimensions\r\n    const canvasWidth = settings.pixelsWidth;\r\n    const canvasHeight = settings.pixelsHeight;\r\n\r\n    ctx.canvas.width  = canvasWidth;\r\n    ctx.canvas.height = canvasHeight;\r\n\r\n    //create image\r\n    image = ctx.createImageData(canvasWidth, canvasHeight);\r\n    data = image.data;\r\n    \r\n    //get respective color per pixel\r\n    let colorArr;\r\n    if (settings.grayScale) {\r\n      colorArr = getTintArray(settings.tint, noise);\r\n    } else {\r\n      colorArr = getColorArray(settings.colors, noise, settings.transparency);\r\n    }\r\n\r\n    //setting each pixel\r\n    let noiseIndex = 0;\r\n    for (var i = 0; i < canvasWidth*canvasHeight*4; i+=4) {\r\n      //offset = (y * id.width + x) * 4;\r\n        drawPixel(i, colorArr[noiseIndex]);\r\n      noiseIndex++;\r\n    }\r\n\r\n    swapBuffer(); \r\n  }\r\n\r\n  function swapBuffer() {\r\n    ctx.putImageData(image, 0, 0);\r\n  }\r\n\r\n  //color process\r\n  function hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16),\r\n      a: 255\r\n    } : null;\r\n  }\r\n\r\n  function getColorArray(colors, arr, transparency){\r\n    const colorsRGB = colors.map( color=>{\r\n      return {\r\n        value:hexToRgb(color.value),\r\n        breakpoint:color.breakpoint\r\n      }\r\n    });\r\n    let initialColor = {r:255, g:255, b:255, a:transparency?0:255};\r\n    let colorArr = arr.map( noise =>{\r\n      let currentColor = initialColor;\r\n      colorsRGB.forEach(color => {\r\n        if (noise>=color.breakpoint) {\r\n          currentColor= color.value;\r\n        }       \r\n      });\r\n      return currentColor;\r\n    });\r\n    return colorArr;\r\n  }\r\n\r\n  function getTintArray(tint, arr){\r\n    const tintRGB = hexToRgb(tint); \r\n    let colorArr = new Array (arr.length);\r\n    for (let index = 0; index < colorArr.length; index++) {\r\n      colorArr[index] = {\r\n        r: parseInt(arr[index]*tintRGB.r, 10),\r\n        g: parseInt(arr[index]*tintRGB.g, 10),\r\n        b: parseInt(arr[index]*tintRGB.b, 10),\r\n        a: 255\r\n      }\r\n    }\r\n    return colorArr;\r\n  }\r\n\r\n  function drawPixel(index, color){\r\n    data[index + 0] = color.r;\r\n    data[index + 1] = color.g;\r\n    data[index + 2] = color.b;\r\n    data[index + 3] = color.a;\r\n  }\r\n\r\n  //noise process\r\n  const updateNoise = (settings) => {\r\n    const simplex = new SimplexNoise(settings.seed);\r\n    let noiseArr=[];\r\n    let noiseIndex = 0;\r\n    for (let i = 0; i < settings.pixelsHeight; i++) {\r\n      for (let j = 0; j < settings.pixelsWidth; j++) {\r\n        noiseArr[noiseIndex] = evaluateCoords(j,i,settings, simplex);\r\n        noiseIndex++;\r\n      } \r\n    }\r\n    return noiseArr;\r\n  }\r\n\r\n  const evaluateCoords= (x,y, settings, simplex)=>{\r\n      let amp = 1\r\n      let freq = 1;\r\n      let noise = 0\r\n      const midWidthX = (settings.pixelsWidth)/2;\r\n      const midWidthY = (settings.pixelsHeight)/2;\r\n      /*let octaveOffsets = [];\r\n      for (let i = 0; i < settings.octaves; i++) {\r\n        const offsetX =  + settings.xOffset;\r\n        const offsetY =  - settings.yOffset;\r\n        octaveOffsets[i] = [offsetX, offsetY];\r\n        //maxPossibleHeight += amplitude;\r\n        //amplitude *= persistance;\r\n      }*/\r\n\r\n      //add successively smaller, higher-frequency terms\r\n      for(let i = 0; i < settings.octaves; ++i){\r\n          let calcX =((x-midWidthX)/settings.zoom+settings.xOffset/midWidthX)*freq;\r\n          let calcY =((y-midWidthY)/settings.zoom+settings.yOffset/midWidthY)*freq;\r\n\r\n          noise += simplex.noise2D(calcX,calcY) * amp//*falloff*settings.falloff\r\n          //maxAmp += amp\r\n          amp *= settings.persistence\r\n          freq *= settings.lacunarity;\r\n      }\r\n          let fx=(x-midWidthX)/settings.zoom;\r\n          let fy=(y-midWidthY)/settings.zoom;\r\n          const rSquare = fx*fx+fy*fy;\r\n          let falloff = 0; \r\n          if(rSquare*rSquare*settings.falloff<=1) falloff = Math.pow(1-settings.falloff*rSquare*rSquare,2); \r\n\r\n      //take the average value of the iterations\r\n      //noise /= maxAmp\r\n      //normalize the result\r\n      noise = (noise + 1)*0.5*falloff\r\n      return Math.max(0, noise-settings.minValue);\r\n  }\r\n\r\n  const Render = {renderCanvas, saveImage, init}\r\n    export default Render;","var canvas;\r\nvar inputUpdateCanvas;\r\nvar getState;\r\nvar zoom=1;\r\nvar isDown = false;\r\nvar initMousePosition;\r\nvar offsetsUpdateCanvas;\r\nvar currentX;\r\nvar currentY;\r\n\r\nfunction init(c, getStateN, inputUpdateCanvasN, offsetsUpdateCanvasN){\r\n  canvas = c;\r\n  inputUpdateCanvas=inputUpdateCanvasN;\r\n  getState = getStateN;\r\n  offsetsUpdateCanvas = offsetsUpdateCanvasN;\r\n\r\n  zoom = Math.sqrt(getState().zoom);\r\n\r\n  canvas.addEventListener('wheel',e=> onZoom(e), false);\r\n  canvas.addEventListener('mousedown', e => onMouseDown(e), true);\r\n\r\n  document.addEventListener('mouseup', () => onMouseUp(), true);\r\n\r\n  document.addEventListener('mousemove', e => onMouseMove(e), true);\r\n}\r\n\r\nfunction onMouseUp() {\r\n  document.body.style.cursor = 'default';\r\n  isDown = false\r\n}\r\n\r\nfunction onMouseDown(e) {\r\n  currentX = getState().xOffset;\r\n  currentY = getState().yOffset;\r\n  document.body.style.cursor = 'move';\r\n  isDown = true;\r\n  initMousePosition = {\r\n    x : e.clientX,\r\n    y : e.clientY\r\n  }\r\n}\r\nfunction onMouseMove(e) {\r\n  if (isDown) {\r\n    const xDif = initMousePosition.x - e.clientX;\r\n    const yDif = initMousePosition.y - e.clientY;\r\n    offsetsUpdateCanvas(currentX + xDif, currentY+yDif); \r\n  }\r\n}\r\n\r\nfunction onZoom(e) {\r\n  e.preventDefault();\r\n  if(e.deltaY > 0){    \r\n    if(zoom>1)zoom-=1;\r\n  }else{\r\n    zoom+=1;\r\n  }\r\n  inputUpdateCanvas({target:{name:\"zoom\", value:Math.pow(zoom,2)}}); \r\n}\r\n    \r\nconst MouseEvents = {init}\r\nexport default MouseEvents;","import validationData from \"./dataModels.json\";\r\n  function validate(name, value) {\r\n    if (validationData[name] == null) return false;\r\n    switch (validationData[name].type) {\r\n      case \"int\":\r\n        return validateInt(value, validationData[name].min, validationData[name].max);\r\n      case \"float\":\r\n        return validateFloat(value, validationData[name].min, validationData[name].max);\r\n      case \"color\":\r\n        return value;\r\n      default:\r\n        return false\r\n    }\r\n  }\r\n\r\n  function validateInt(value, min, max) {\r\n    if (isNumber(value) && value%1===0) {\r\n      if (value>=min && value<=max) {\r\n        return parseInt(value); \r\n      }\r\n    } \r\n    return false;\r\n  }\r\n\r\n  function validateFloat(value, min, max) {\r\n    if (isNumber(value)) {\r\n      if (value>=min && value<=max) {\r\n        return parseFloat(value); \r\n      }\r\n    } \r\n    return false;\r\n  }\r\n\r\n  function isNumber(n) { return !isNaN(parseFloat(n)) && !isNaN(n - 0) }\r\n  const Validate = validate\r\n  export default Validate;","import React from \"react\";\r\nimport InputButton from \"./input-button\";\r\nimport trashAlt from '@iconify/icons-fa-solid/trash-alt';\r\n\r\nclass ColorPicker extends React.Component {\r\n\r\n  componentDidMount(){\r\n    this.colorInput = document.getElementById(`${this.props.dataKey}color`);\r\n    this.colorPick = document.getElementById(`${this.props.dataKey}colorP`);\r\n    this.breakpointRange = document.getElementById(`${this.props.dataKey}breakpointR`);\r\n    this.breakpointText = document.getElementById(`${this.props.dataKey}breakpointT`);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className={`pt-2 ${this.props.size}`}>\r\n        <span className= {`text-gray-10 block ${this.props.labelShow}`}>\r\n          {this.props.inputName}\r\n        </span>\r\n        <div className=\"flex space-x-5\">\r\n          <input type=\"text\" value={this.props.breakpoint}  \r\n                id={`${this.props.dataKey}breakpointT`}\r\n                onChange={ () => this.props.colorChangeHandler(this.colorInput, this.breakpointText, this.props.dataKey)} \r\n                className=\"appearance-none w-1/5 mt-1 min-w-1/5 \r\n                bg-gray-50 h-10 rounded-lg px-3 text-gray-10 shadow-inner leading-tight\r\n                focus:outline-none focus:ring  ring-gray-90\" />\r\n\r\n          <input type=\"range\" min={this.props.min} max={this.props.max} step={this.props.step}  \r\n                id={`${this.props.dataKey}breakpointR`}\r\n                value={this.props.breakpoint} \r\n                onChange={ () => this.props.colorChangeHandler(this.colorInput, this.breakpointRange, this.props.dataKey)} \r\n                className=\"appearance-none w-full m-auto \r\n              bg-gray-50 h-2 rounded-lg   shadow-inner \" />\r\n          <div className=\"w-2/5 relative\" >\r\n            <input type=\"text\" value={this.props.color}  \r\n                  id={`${this.props.dataKey}color`}\r\n                  onChange={ () => this.props.colorChangeHandler(this.colorInput, this.breakpointText, this.props.dataKey)} \r\n                  className=\"appearance-none w-full h-1/2 absolute bottom-0 text-sm\r\n                  bg-gray-50 rounded-b-lg text-gray-10 shadow-inner leading-tight\r\n                  focus:outline-none focus:ring  ring-gray-90\" />\r\n            <input type=\"color\" id={`${this.props.dataKey}colorP`}\r\n                    value={this.props.color} \r\n                    onInput={ () => this.props.colorChangeHandler(this.colorPick, this.breakpointText, this.props.dataKey)} \r\n                    className=\"appearance-none block w-full mt-1 h-10\r\n                              bg-gray-50 rounded-lg  overflow-hidden shadow-inner \r\n                                focus:outline-none focus:ring  ring-gray-90\" />\r\n\r\n          </div>\r\n\r\n          <InputButton icon={trashAlt} onClick={()=> this.props.removeColor(this.props.dataKey)}/>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ColorPicker;\r\n","import InputButton from \"./input-button\";\r\nimport ColorPicker from \"./color-picker\";\r\nimport plusIcon from '@iconify/icons-fa-solid/plus';\r\n\r\nconst { default: Title } = require(\"./title\");\r\n\r\nfunction ColorsSettings(props) {\r\n\r\n  function renderColors(){\r\n    return props.noiseSettings.colors.map( (color,index) =>(\r\n            <ColorPicker key={index} min={0} max={1.3} step={0.01} size=\"\" labelShow=\"hidden\" \r\n                        dataKey={index}\r\n                        color={color.value} \r\n                        breakpoint={color.breakpoint}\r\n                        colorChangeHandler={props.colorChangeHandler}\r\n                        removeColor={props.removeColor}/>\r\n          ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-5 mb-5 w-full h-auto overflow-y-auto\">\r\n      <Title title=\"Colors Settings\" />\r\n      <div className=\" font-montserrat-m\">\r\n        <div className=\"flex pt-10 text-gray-10\">\r\n          <label className=\"w-full\">Breakpoint</label>\r\n          <span className=\"min-w-1/5 mr-0 m-auto flex pl-5\">\r\n            <label className=\"m-auto \">Color</label>\r\n          </span>\r\n        </div>\r\n        {renderColors()}\r\n        <InputButton  className=\"mt-5 w-full\" icon={plusIcon} onClick={props.addColor } />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorsSettings;\r\n","import React from 'react';\r\nimport Footer from './components/footer';\r\nimport Navbar from './components/navbar';\r\nimport presetsData from \"./presets/presetsData.json\";\r\nimport ImageDisplay from \"./components/imageDisplay\";\r\nimport ImageSettings from \"./components/imageSettings\";\r\nimport NoiseSettings from \"./components/noiseSettings\";\r\nimport Separator from \"./components/separator\";\r\nimport Render from \"./noiseGeneration/render\";\r\nimport MouseEvents from './noiseGeneration/mouseEvents';\r\nimport Validate from \"./noiseGeneration/validate\";\r\nimport ColorsSettings from \"./components/colorsSettings\";\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    //bind functions\r\n    this.changePreset = this.changePreset.bind(this);\r\n    this.inputUpdateCanvas = this.inputUpdateCanvas.bind(this);\r\n    this.checkboxUpdateCanvas = this.checkboxUpdateCanvas.bind(this);\r\n    this.colorUpdateCanvas = this.colorUpdateCanvas.bind(this);\r\n    this.generateSeed = this.generateSeed.bind(this);\r\n    this.exportSettings = this.exportSettings.bind(this);\r\n    this.importSettings = this.importSettings.bind(this);\r\n    this.addColor = this.addColor.bind(this);\r\n    this.removeColor = this.removeColor.bind(this);\r\n    this.downloadImage = this.downloadImage.bind(this);\r\n    this.getState = this.getState.bind(this);\r\n    this.offsetsUpdateCanvas = this.offsetsUpdateCanvas.bind(this);\r\n\r\n    //get presets data of json file\r\n    const defaultPresetInfo = presetsData.presets.filter(preset =>{\r\n      return preset.name===presetsData.default;\r\n    })[0];\r\n    const defaultPresetData = require(`./presets/${defaultPresetInfo.path}`);\r\n\r\n    //set initial state\r\n    this.state={\r\n      selectedPresetName:defaultPresetInfo.name,\r\n      ...defaultPresetData\r\n    }\r\n  }\r\n  getState(){return this.state}\r\n  componentDidMount(){\r\n    const canvas = Render.init();\r\n    MouseEvents.init(canvas, this.getState, this.inputUpdateCanvas, this.offsetsUpdateCanvas);\r\n    this.renderCanvas();\r\n    //this.generateSeed();\r\n  }\r\n\r\n  //Update Input Methods\r\n  generateSeed(){\r\n    const randomSeed = Math.random();\r\n    this.setState({seed: randomSeed}, ()=> this.renderCanvas());\r\n  }\r\n  changePreset(name) {\r\n    console.log(name);\r\n    const defaultPresetInfo = presetsData.presets.filter(preset =>{\r\n      return preset.name===name;\r\n    })[0];\r\n    const defaultPresetData = require(`./presets/${defaultPresetInfo.path}`);\r\n    this.setState({\r\n      selectedPresetName:defaultPresetInfo.name,\r\n      ...defaultPresetData\r\n    }, ()=> this.renderCanvas())\r\n  }\r\n  offsetsUpdateCanvas(x,y){\r\n    const valueX =Validate(\"xOffset\", x);\r\n    const valueY =Validate(\"yOffset\", y);\r\n    if (valueX!==false && valueY!==false) {\r\n      this.setState({ xOffset: valueX, yOffset: valueY }, ()=> this.renderCanvas());\r\n    }\r\n  }\r\n  inputUpdateCanvas(e){\r\n    const value =Validate(e.target.name, e.target.value);\r\n    if (value!==false) {\r\n      this.setState({ [e.target.name]: value }, ()=> this.renderCanvas());\r\n    }\r\n  }\r\n  checkboxUpdateCanvas(e){\r\n    this.setState({ [e.target.name]: e.target.checked }, ()=> this.renderCanvas());\r\n  }\r\n  colorUpdateCanvas(colorInput, breakpointInput,index){\r\n    const value =Validate('breakpoint', breakpointInput.value);\r\n    const isColor = this.isColor(colorInput.value);\r\n    if (value!==false && isColor) {\r\n      let colors = [...this.state.colors];\r\n      let item = {\r\n        breakpoint: value,\r\n        value: colorInput.value\r\n      };\r\n      colors[index] = item;\r\n      this.setState({colors}, ()=> this.renderCanvas() );\r\n    }\r\n  }\r\n  isColor(strColor){\r\n    var s = new Option().style;\r\n    s.color = strColor;\r\n    var test1 = s.color === strColor;\r\n    var test2 = /^#[0-9A-F]{6}$/i.test(strColor);\r\n    if(test1 === true || test2 === true){\r\n      return true;\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n  addColor(){\r\n    let colors = [...this.state.colors];\r\n    const lastItem = colors[colors.length-1];\r\n    let newBreakpoint;\r\n    let newValue;\r\n    if (lastItem) {\r\n      newBreakpoint = lastItem.breakpoint*1+(1-lastItem.breakpoint*1)/2;\r\n      newBreakpoint = Math.round(newBreakpoint * 100) / 100     \r\n      newValue=lastItem.value;\r\n    }else{\r\n      newBreakpoint=0;\r\n      newValue =\"#000000\";\r\n    }\r\n    let item = {\r\n      breakpoint: newBreakpoint,\r\n      value: newValue\r\n    };\r\n    colors.push(item);\r\n    this.setState({colors}, ()=> this.renderCanvas() );   \r\n  }\r\n  removeColor(index){\r\n    let colors = [...this.state.colors];\r\n    colors.splice(index, 1);\r\n    this.setState({colors}, ()=> this.renderCanvas() );   \r\n  }\r\n  downloadImage(){\r\n    const valueX =Validate(\"scale\", this.state.scale*this.state.pixelsWidth);\r\n    const valueY =Validate(\"scale\", this.state.scale*this.state.pixelsHeight);\r\n    if (valueX!==false && valueY!==false) {\r\n      Render.saveImage(this.state.scale)\r\n    }else{\r\n      console.log('try with a smaller scale');\r\n    }\r\n  }\r\n\r\n  async renderCanvas(){\r\n      Render.renderCanvas(this.state);\r\n  }\r\n\r\n  //settings\r\n  exportSettings(){\r\n    const exportData = JSON.parse(JSON.stringify(this.state));\r\n    delete exportData.isLoading;\r\n    delete exportData.selectedPresetName;\r\n    const jsonData = JSON.stringify(exportData, null, 2);\r\n    const a = document.createElement(\"a\");\r\n    a.href = URL.createObjectURL(new Blob([jsonData], {\r\n      type: \"text/plain\"\r\n    }));\r\n    a.setAttribute(\"download\", \"settings.json\");\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  importSettings(e){\r\n    var files = e.target.files;\r\n    var file = files[0];           \r\n    var reader = new FileReader();\r\n    reader.onload = (event)=> {\r\n      const data = JSON.parse(event.target.result);\r\n      this.setState({...data}, ()=> this.renderCanvas());\r\n    }\r\n    reader.readAsText(file)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"bg-gray-70 h-full\">\r\n        <Navbar list={presetsData.presets} selectedPresetName={this.state.selectedPresetName} onChangePreset={this.changePreset}/>\r\n        <div className=\"p-20 h-full\">\r\n          <div className=\" h-full flex flex-grow flex-nowrap px-40\">\r\n            {/* Left: image display and noise settings */}\r\n            <div className=\"  w-3/5  p-10 overflow-hidde flex flex-col \">\r\n              <ImageDisplay  {...this.state} inputChangeHandler={this.inputUpdateCanvas} />\r\n              <NoiseSettings noiseSettings={this.state} \r\n                            inputChangeHandler={this.inputUpdateCanvas} \r\n                            checkboxChangeHandler={this.checkboxUpdateCanvas} \r\n                            colorChangeHandler={this.colorUpdateCanvas}\r\n                            generateSeed={this.generateSeed}/>\r\n              {/*<pre className=\"block text-gray-10 my-10 p-10\">\r\n                { JSON.stringify(this.state, null, 2) }\r\n              </pre>*/}\r\n            </div>\r\n            <Separator/>\r\n            {/* Right: colors settings and download, import and export */}\r\n            <div className=\"h-full  w-2/5  p-10 overflow-hidde flex flex-col \">\r\n              <ColorsSettings noiseSettings={this.state} \r\n                              inputChangeHandler={this.inputUpdateCanvas} \r\n                              checkboxChangeHandler={this.checkboxUpdateCanvas} \r\n                              colorChangeHandler={this.colorUpdateCanvas}\r\n                              generateSeed={this.generateSeed}\r\n                              removeColor={this.removeColor}\r\n                              addColor={this.addColor}/>\r\n              <Separator horizontal={true} />\r\n              <ImageSettings scale={this.state.scale} \r\n                              inputChangeHandler={this.inputUpdateCanvas} \r\n                              checkboxChangeHandler={this.checkboxChangeHandler}\r\n                              download={this.downloadImage}\r\n                              exportSettings={this.exportSettings}\r\n                              importSettings={this.importSettings}\r\n                              forceRender={this.renderCanvas}/>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}